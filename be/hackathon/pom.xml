<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">  
  <modelVersion>4.0.0</modelVersion>  
  <groupId>com.aspire.hackathon</groupId>  
  <artifactId>aspire-hackathon</artifactId>  
  <version>0.0.1-SNAPSHOT</version>  
  <name>aspire-hackathon</name>  
  <parent> 
    <groupId>org.springframework.boot</groupId>  
    <artifactId>spring-boot-starter-parent</artifactId>  
    <version>2.6.14</version> 
  </parent>  
  <properties> 
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>  
    <java.version>1.8</java.version> 
  </properties>  
  <dependencies> 
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-data-jpa</artifactId> 
    </dependency>  
    <dependency>
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-web</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>com.mysql</groupId>  
      <artifactId>mysql-connector-j</artifactId>  
      <scope>runtime</scope> 
    </dependency>  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-test</artifactId>  
      <scope>test</scope> 
    </dependency> 
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-security</artifactId>  
    </dependency> 
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>0.9.1</version>
	</dependency>
	<dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.0</version>
	</dependency>
  </dependencies>  
  <build> 
    <finalName>ROOT</finalName>  
    <resources> 
      <resource> 
        <directory>src/main/resources</directory>  
        <filtering>true</filtering> 
      </resource> 
    </resources>  
    <plugins> 
      <plugin> 
        <groupId>org.apache.maven.plugins</groupId>  
        <artifactId>maven-resources-plugin</artifactId>  
        <version>3.0.2</version>  
        <!--$NO-MVN-MAN-VER$ -->  
        <configuration> 
          <delimiters> 
            <delimiter>@</delimiter> 
          </delimiters>  
          <useDefaultDelimiters>false</useDefaultDelimiters> 
        </configuration> 
      </plugin>  
      <plugin> 
        <groupId>org.springframework.boot</groupId>  
        <artifactId>spring-boot-maven-plugin</artifactId> 
      </plugin>  
      <plugin> 
        <groupId>org.apache.maven.plugins</groupId>  
        <artifactId>maven-failsafe-plugin</artifactId>  
        <version>3.0.0-M6</version> 
      </plugin>  
      <plugin> 
        <groupId>org.jacoco</groupId>  
        <artifactId>jacoco-maven-plugin</artifactId>  
        <version>0.8.7</version>  
        <executions> 
          <execution> 
            <id>before-unit-test-execution</id>  
            <goals> 
              <goal>prepare-agent</goal> 
            </goals>  
            <configuration> 
              <destFile>${project.build.directory}/jacoco/unitTestCoverage/jacoco-unit-tests.exec</destFile> 
            </configuration> 
          </execution>  
          <execution> 
            <id>after-unit-test-execution</id>  
            <phase>test</phase>  
            <goals> 
              <goal>report</goal> 
            </goals>  
            <configuration> 
              <dataFile>${project.build.directory}/jacoco/unitTestCoverage/jacoco-unit-tests.exec</dataFile>  
              <outputDirectory>${project.reporting.outputDirectory}/jacoco/unitTestCoverage</outputDirectory> 
            </configuration> 
          </execution>  
          <execution> 
            <id>before-integration-test-execution</id>  
            <phase>pre-integration-test</phase>  
            <goals> 
              <goal>prepare-agent</goal> 
            </goals>  
            <configuration> 
              <!-- Sets the path to the file which contains the execution data. -->  
              <destFile>${project.build.directory}/jacoco/integrationCoverage/jacoco-integration-tests.exec</destFile> 
            </configuration> 
          </execution>  
          <execution> 
            <id>after-integration-test-execution</id>  
            <phase>post-integration-test</phase>  
            <goals> 
              <goal>report</goal> 
            </goals>  
            <configuration> 
              <!-- Sets the path to the file which contains the execution data. -->  
              <dataFile>${project.build.directory}/jacoco/integrationCoverage/jacoco-integration-tests.exec</dataFile>  
              <!-- Sets the output directory for the code coverage report. -->  
              <outputDirectory>${project.reporting.outputDirectory}/jacoco/integrationCoverage</outputDirectory> 
            </configuration> 
          </execution> 
        </executions> 
      </plugin>  
    </plugins> 
  </build> 
</project>